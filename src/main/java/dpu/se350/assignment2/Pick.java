// @formatter:off
////////////////////////////////////////////////////////////////////////////
//                         Kellen Siczka - 2082880                        //
//                        DePaul University - 24/25                       //
//              SE350 - Object-Oriented Software Development              //
//                ksiczka@depaul.edu | edu@kellensiczka.com               //
//         Eclipse Adoptium JRE 21.0.5.11 - Win11/WSL2 - MS VSCode        //
//           Completed by Kellen Siczka unless otherwise noted            //
//        Note: Docstrings and explanations may be generated by AI        //
////////////////////////////////////////////////////////////////////////////
//                         Week 7 - Spring Quarter                        //
//                          Lab 8 - Due 05-12-2025                        //
//               File Info: #14/17 | Pick.java | Java Class               //
////////////////////////////////////////////////////////////////////////////
// @formatter:on

package dpu.se350.assignment2;

import java.util.Scanner;

/**
 * Represents an action to pick up an item from the current chamber.
 */
public class Pick implements Action {
    private Dungeon dungeon;
    private Item item;

    /**
     * Creates a new Pick action.
     * 
     * @param dungeon The dungeon
     * @param item The item to pick up
     */
    public Pick(Dungeon dungeon, Item item) {
        this.dungeon = dungeon;
        this.item = item;
    }

    /**
     * Executes the pick action, adding the item to the player's inventory and removing it from the
     * chamber.
     */
    @Override
    public void execute() {
        Chamber currentChamber = dungeon.getCurrentChamber();
        Character player = dungeon.getPlayer();

        // Remove from chamber and add to inventory
        if (currentChamber.removeItem(item)) {
            player.addItem(item);
            System.out.println("Picked up " + item.getName());

            // Ask if the player wants to equip the item
            System.out.println("Do you want to equip this item? (y/n)");
            Scanner scanner = new Scanner(System.in);
            String response = scanner.nextLine().trim().toLowerCase();

            if (response.equals("y") || response.equals("yes")) {
                System.out.println("Equip to left hand or right hand? (left/right)");
                response = scanner.nextLine().trim().toLowerCase();
                boolean isLeftHand = response.equals("left") || response.equals("l");

                if (player.equipItem(item, isLeftHand)) {
                    System.out.println(item.getName() + " equipped to "
                            + (isLeftHand ? "left" : "right") + " hand");
                }
            }
        } else {
            System.out.println("Failed to pick up the item");
        }
    }

    /**
     * Returns a string representation of this action.
     * 
     * @return A string representation of this action
     */
    @Override
    public String toString() {
        return "Pick up " + item.toString();
    }
}
