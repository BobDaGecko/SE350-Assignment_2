// @formatter:off
////////////////////////////////////////////////////////////////////////////
//                         Kellen Siczka - 2082880                        //
//                        DePaul University - 24/25                       //
//              SE350 - Object-Oriented Software Development              //
//                ksiczka@depaul.edu | edu@kellensiczka.com               //
//         Eclipse Adoptium JRE 21.0.5.11 - Win11/WSL2 - MS VSCode        //
//           Completed by Kellen Siczka unless otherwise noted            //
//        Note: Docstrings and explanations may be generated by AI        //
////////////////////////////////////////////////////////////////////////////
//                         Week 7 - Spring Quarter                        //
//                          Lab 8 - Due 05-12-2025                        //
//                File Info: #3/17 | Item.java | Java Class               //
////////////////////////////////////////////////////////////////////////////
// @formatter:on

package dpu.se350.assignment2;

/**
 * Represents an item that can be carried by a character. Items can provide bonuses to strength or
 * craft when equipped.
 */
public abstract class Item {
    private String name;
    private int strengthBonus;
    private int craftBonus;

    /**
     * Creates a new item with the specified name and bonuses.
     *
     * @param name The name of the item
     * @param strengthBonus The strength bonus provided by this item
     * @param craftBonus The craft bonus provided by this item
     */
    public Item(String name, int strengthBonus, int craftBonus) {
        this.name = name;
        this.strengthBonus = strengthBonus;
        this.craftBonus = craftBonus;
    }

    /**
     * Gets the name of the item.
     *
     * @return The item's name
     */
    public String getName() {
        return name;
    }

    /**
     * Gets the strength bonus provided by this item.
     *
     * @return The strength bonus
     */
    public int getStrengthBonus() {
        return strengthBonus;
    }

    /**
     * Gets the craft bonus provided by this item.
     *
     * @return The craft bonus
     */
    public int getCraftBonus() {
        return craftBonus;
    }

    /**
     * Returns a string representation of this item.
     *
     * @return A string representation of this item
     */
    @Override
    public String toString() {
        return name + " (Strength: +" + strengthBonus + ", Craft: +" + craftBonus + ")";
    }
}
