// @formatter:off
////////////////////////////////////////////////////////////////////////////
//                         Kellen Siczka - 2082880                        //
//                        DePaul University - 24/25                       //
//              SE350 - Object-Oriented Software Development              //
//                ksiczka@depaul.edu | edu@kellensiczka.com               //
//         Eclipse Adoptium JRE 21.0.5.11 - Win11/WSL2 - MS VSCode        //
//           Completed by Kellen Siczka unless otherwise noted            //
//        Note: Docstrings and explanations may be generated by AI        //
////////////////////////////////////////////////////////////////////////////
//                         Week 7 - Spring Quarter                        //
//                          Lab 8 - Due 05-12-2025                        //
//              File Info: #15/17 | Fight.java | Java Class               //
////////////////////////////////////////////////////////////////////////////
// @formatter:on

package dpu.se350.assignment2;

import java.util.Random;

/**
 * Represents an action to fight a monster guarding a door.
 */
public class Fight implements Action {
    private Dungeon dungeon;
    private Door door;
    private Monster monster;
    private Random random;

    /**
     * Creates a new Fight action.
     *
     * @param dungeon The dungeon
     * @param door The door guarded by the monster
     * @param monster The monster to fight
     */
    public Fight(Dungeon dungeon, Door door, Monster monster) {
        this.dungeon = dungeon;
        this.door = door;
        this.monster = monster;
        this.random = new Random();
    }

    /**
     * Executes the fight action, resolving combat between the player and the monster. Combat is
     * based on either strength or craft, depending on the monster's skills.
     */
    @Override
    public void execute() {
        Character player = dungeon.getPlayer();

        System.out.println("Fighting " + monster.getName() + "...");

        // Determine if this is a strength or craft fight
        boolean isStrengthFight = monster.getStrength() > 0;

        // Roll dice and add appropriate stats
        int playerRoll = random.nextInt(6) + 1;
        int monsterRoll = random.nextInt(6) + 1;

        int playerTotal, monsterTotal;

        if (isStrengthFight) {
            playerTotal = playerRoll + player.getStrength();
            monsterTotal = monsterRoll + monster.getStrength();
            System.out.println("Strength battle!");
        } else {
            playerTotal = playerRoll + player.getCraft();
            monsterTotal = monsterRoll + monster.getCraft();
            System.out.println("Craft battle!");
        }

        System.out
                .println(
                        player.getName() + " rolled " + playerRoll
                                + (isStrengthFight ? " + " + player.getStrength() + " strength"
                                        : " + " + player.getCraft() + " craft")
                                + " = " + playerTotal);

        System.out
                .println(
                        monster.getName() + " rolled " + monsterRoll
                                + (isStrengthFight ? " + " + monster.getStrength() + " strength"
                                        : " + " + monster.getCraft() + " craft")
                                + " = " + monsterTotal);

        // Determine the winner and apply damage
        if (playerTotal > monsterTotal) {
            int damage = playerTotal - monsterTotal;
            monster.takeDamage(damage);
            System.out.println("You hit the " + monster.getName() + " for " + damage + " damage!");
            System.out.println("Monster health: " + monster.getHealth());

            if (monster.isDefeated()) {
                System.out.println("You defeated the " + monster.getName() + "!");
                System.out.println("The path is now clear.");
            }
        } else if (monsterTotal > playerTotal) {
            int damage = monsterTotal - playerTotal;
            player.takeDamage(damage);
            System.out.println("The " + monster.getName() + " hit you for " + damage + " damage!");
            System.out.println("Your health: " + player.getHealth());

            if (player.isDefeated()) {
                System.out.println("You have been defeated!");
                dungeon.setFinished(true);
            }
        } else {
            System.out.println("The attack was blocked! No damage dealt.");
        }
    }

    /**
     * Returns a string representation of this action.
     *
     * @return A string representation of this action
     */
    @Override
    public String toString() {
        return "Fight " + monster.getName();
    }
}
